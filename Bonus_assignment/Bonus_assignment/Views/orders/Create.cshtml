@model Bonus_assignment.Models.order
@using Bonus_assignment.Models
@{
    Layout = "~/Views/Shared/user.cshtml";
    ViewBag.Title = "Create Order";
    int userId = Convert.ToInt32(Session["id"]);
    string username = Session["username"] as string;

    productEntities db = new productEntities();
    var item = db.items.Find((int)Session["ItemId"]);
    
}

<h2>Order Details</h2>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <img src="@Url.Content(@item.image_url)" class="img-fluid" alt="Large Image" style="width: 500px;">
        </div>
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Select quantity for the order</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.userid, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBox("userid", userId, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.userid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBox("username", username, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.item_id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.item_id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.item_id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.order_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.order_date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.order_date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            <input type="submit" value="Confirm Order" class="btn btn-primary" style="margin-top:15px;" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
